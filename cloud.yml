---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to install CloudWatchAgent on windows. It was validated on windows 2016'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.medium
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceAMI:
    Description: Managed AMI ID for EC2 Instance
    Type : String
    Default: ami-0b18ca1a93b538109
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - "installAwsCli"
            - "downloadPSScripts"
            - "envVariables"
            - 00_setupCfnHup
            - 01_CfnHup_service
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
            
        installAwsCli:
          packages:
            msi:
              awscli: "https://awscli.amazonaws.com/AWSCLIV2.msi"
        downloadPSScripts:
          sources:
            c:/Tetherfi/Configs: "https://tetherfi-latest-builds.s3.amazonaws.com/TetherfiHome/env_setup.zip"
        envVariables:
          commands:
            envScript:
              command: "powershell.exe -File c://Tetherfi/Configs/env_setup.ps1"
        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        00_setupCfnHup:
          files:
             "c:\\cfn\\cfn-hup.conf":
               content: !Sub |
                 [main]
                 stack=${AWS::StackId}
                 region=${AWS::Region}
                 interval=1
             "c:\\cfn\\hooks.d\\amazon-cloudwatch-agent-auto-reloader.conf":
               content: !Sub |
                 [cfn-auto-reloader-hook]
                 triggers=post.update
                 path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                 action=cfn-init.exe -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment
        01_CfnHup_service:
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - "c:\\cfn\\cfn-hup.conf"
                  - "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
        # Definition of json configuration of AmazonCloudWatchAgent, you can change the configuration below.
        02_config-amazon-cloudwatch-agent:
          files:
            "C:\\Program Files\\Amazon\\AmazonCloudWatchAgent\\config.json":
              content: !Sub |
                {  
                    "logs": {
                        "logs_collected": {
                            "files": {
                                "collect_list": [
                                    {
                                                "file_path": "c:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\Logs\\amazon-cloudwatch-agent.log",
                                                "log_group_name": "amazon-cloudwatch-agent.log",
                                                "log_stream_name": "{instance_id}"
                                    }
                                    {
                                                "file_path": "C:\\cfn\\log\\cfn-init.log",
                                                "log_group_name": "cfn-init.log",
                                                "log_stream_name": "{instance_id}"
                                    }
                                ]
                            },
                            "windows_events": {
                                "collect_list": [
                                    {
                                        "event_format": "xml",
                                        "event_levels": [
                                            "WARNING",
                                            "ERROR",
                                            "CRITICAL"
                                        ],
                                        "event_name": "System",
                                        "log_group_name": "System",
                                        "log_stream_name": "{instance_id}"
                                    }
                                    {
                                        "event_format": "xml",
                                        "event_levels": [
                                            "WARNING",
                                            "ERROR",
                                            "CRITICAL"
                                        ],
                                        "event_name": "CustomizedName",
                                        "log_group_name": "CustomizedLogGroup",
                                        "log_stream_name": "CustomizedLogStream"
                                    }
                                ]
                            }
                            
                        }
                    },

                    "metrics": {
                        "append_dimensions": {
                            "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
                            "ImageId": "${!aws:ImageId}",
                            "InstanceId": "${!aws:InstanceId}",
                            "InstanceType": "${!aws:InstanceType}"
                        },
                        "metrics_collected": {
                            "Memory": {
                                "measurement": [
                                    "% Committed Bytes In Use"
                                ],
                                "metrics_collection_interval": 60
                            },
                            "Paging File": {
                                "measurement": [
                                     "% Usage"
                                ],
                                "metrics_collection_interval": 60,
                                "resources": [
                                    "*"
                                ]
                            }
                        }
                    }
                } 
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a stop"
            02_start_service:
              command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a fetch-config -m ec2 -c file:C:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent.json -s"

    Properties:
      InstanceType:
        Ref: InstanceType
      IamInstanceProfile: !ImportValue RootInstanceProfile
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: InstanceAMI
      UserData:
        Fn::Base64: !Sub |
          <script>
          mkdir C:\Downloads\Amazon\AmazonCloudWatchAgent
          powershell -Command "(New-Object Net.WebClient).DownloadFile('https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi','C:\Downloads\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi')"
          C:\Downloads\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi
          cfn-init.exe -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
          cfn-signal.exe -e %errorlevel% --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          </script>
         
         
         #<powershell>
         #powershell -Command "Invoke-WebRequest -Uri https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/AmazonCloudWatchAgent.zip -OutFile $env:TEMP\AmazonCloudWatchAgent.zip"
         #powershell -Command "Expand-Archive -Path $env:TEMP\AmazonCloudWatchAgent.zip -DestinationPath $env:TEMP\AmazonCloudWatchAgent"
         #Set-Location -Path $env:TEMP\AmazonCloudWatchAgent
         #powershell -Command ".\install.ps1"
         #cfn-init.exe -s ${AWS::StackId} -r EC2Instance --region ${AWS::Region}
         #cfn-signal.exe -e $LASTEXITCODE --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
         #<powershell>
         
         
         
         