Description: AWS ElatiCache for Redis - Cluster Mode Demonstration

Parameters:

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: security groups from applications side/ this can be refer directly from output
  
  ProjectName:
    Type: String
    Default: aws-elasticache-cluster

  ElasticacheInstanceClass:
    Type: String
    Default: cache.t2.micro 
  Password:
    NoEcho: "true"
    Description: The ElastiCache password
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "^[a-zA-Z0-9]*$"
Resources:
  RedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      AutoMinorVersionUpgrade: true
      CacheParameterGroupName: default.redis5.0.cluster.on
      CacheNodeType: !Ref ElasticacheInstanceClass
      CacheSubnetGroupName:  !Ref RedisSubnetGroup
      Engine: redis
      EngineVersion: 5.0.4
      NumNodeGroups: 1
      Port: 6379
      ReplicasPerNodeGroup: 0
      ReplicationGroupDescription: Sample Redis group for scaling
      SecurityGroupIds:
        - !Ref RedisSecurityGroup
      Tags:
        - Key: Project
          Value: !Ref ProjectName
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Redis subnet group
      SubnetIds:
        - !ImportValue PrivateSubnet1
        - !ImportValue PrivateSubnet2
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue VPC
      GroupDescription: Enable Redis access 
  SecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress" 
    Properties:
      GroupId: !GetAtt [RedisSecurityGroup, GroupId]
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: !Ref WebServerSecurityGroup
      Tags:
        - Key: Project
          Value: !Ref ProjectName
Outputs:
  URL:
    Description:  Newly created Elasticache Redis cluster Mode Demonstration
    Value: !Ref RedisCluster
